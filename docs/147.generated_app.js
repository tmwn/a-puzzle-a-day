(()=>{"use strict";class t{month;day;masks;rest;location;constructor(t,e){this.month=t,this.day=e;const i=l(t,e);this.rest=255,this.masks=new Array(o).fill(0),this.location=new Array(8).fill(null);for(let t=0;t<o;t++)for(let e=0;e<n;e++)this.masks[t]|=(i[t][e]===s.Block?1:0)<<e}put(t,e,s,i){const r=[!1,()=>{}];if(0==(this.rest>>t.kind&1))return r;const h=t.shape.height(),l=t.shape.width;if(i){let e=0;for(;!t.shape.at(0,e);)e++;if((s-=e)<0)return r}if(e+h>o||s+l>n)return r;for(let i=0;i<h;i++)if(0!=(this.masks[e+i]>>s&t.shape.rows[i]))return r;for(let i=0;i<h;i++)this.masks[e+i]|=t.shape.rows[i]<<s,this.location[t.kind]=[e,s,t];return this.rest&=~(1<<t.kind),[!0,()=>{this.rest|=1<<t.kind,this.location[t.kind]=null;for(let i=0;i<h;i++)this.masks[e+i]&=~(t.shape.rows[i]<<s)}]}_remove(t,e,s){if(t<0||t>=o||e<0||e>=n)return;const i=this.kind(t,e);if(s===i){this.masks[t]&=~(1<<e);for(const[s,r]of[[-1,0],[0,-1],[0,1],[1,0]])this._remove(t+s,e+r,i)}}remove(t,e){const i=this.kind(t,e);return i!==s.Block&&i!==s.Empty&&(this._remove(t,e,i),this.rest|=1<<i,this.location[i]=null,!0)}kind(t,e){if(0==(this.masks[t]>>e&1))return s.Empty;for(let s=0;s<8;s++)if(this.contains(s,t,e))return s;return s.Block}contains(t,e,s){if(!this.location[t])return!1;const[i,r,o]=this.location[t],[n,h]=[e-i,s-r];return!(n<0||n>=o.shape.height()||h<0||h>=o.shape.width)&&1===o.shape.at(n,h)}has(t,e){return 1==(this.masks[t]>>e&1)}field(){const t=new Array;for(let e=0;e<o;e++){t.push([]);for(let i=0;i<n;i++)t[e].push(this.has(e,i)?s.Block:s.Empty)}for(let e=0;e<8;e++){if(!this.location[e])continue;const[s,i,r]=this.location[e];for(let o=0;o<r.shape.height();o++)for(let n=0;n<r.shape.width;n++)this.contains(e,s+o,i+n)&&(t[s+o][i+n]=e)}return t}clone(){return e(this)}}function e(e){const s=new t(e.month,e.day);for(let t=0;t<o;t++)s.masks[t]=e.masks[t];for(let t=0;t<8;t++){if(!e.location[t])continue;const[r,o,n]=e.location[t];s.location[t]=[r,o,{kind:n.kind,shape:new i(n.shape.rows,n.shape.width)}]}return s.rest=e.rest,s}var s;!function(t){t[t.Empty=-1]="Empty",t[t.PieceO=0]="PieceO",t[t.PieceL=1]="PieceL",t[t.PieceN=2]="PieceN",t[t.PieceP=3]="PieceP",t[t.PieceU=4]="PieceU",t[t.PieceV=5]="PieceV",t[t.PieceY=6]="PieceY",t[t.PieceZ=7]="PieceZ",t[t.Block=8]="Block"}(s||(s={}));class i{rows;width;constructor(t,e){this.rows=t,this.width=e}height(){return this.rows.length}at(t,e){return this.rows[t]>>e&1}rotated(){const[t,e]=[this.rows.length,this.width],s=new Array;for(let i=0;i<e;i++){let e=0;for(let s=0;s<t;s++)e|=this.at(t-1-s,i)<<s;s.push(e)}return new i(s,t)}flipped(){const[t,e]=[this.rows.length,this.width],s=new Array;for(let i=0;i<t;i++){let t=0;for(let s=0;s<e;s++)t|=this.at(i,e-1-s)<<s;s.push(t)}return new i(s,e)}equals(t){if(this.width!=t.width)return!1;for(let e=0;e<this.rows.length;e++)if(this.rows[e]!=t.rows[e])return!1;return!0}}function r(t){return{kind:t.kind,shape:t.shape.flipped()}}const o=7,n=7,h=[6,6,7,7,7,7,3],l=(t,e)=>{const i=[];for(let t=0;t<o;t++){i.push([]);for(let e=0;e<n;e++)i[t].push(e<h[t]?s.Empty:s.Block)}return i[Math.floor((t-1)/6)][(t-1)%6]=s.Block,i[Math.floor(2+(e-1)/7)][(e-1)%7]=s.Block,i},c=[[s.PieceO,["111","111"]],[s.PieceL,["1111","0001"]],[s.PieceN,["1110","0011"]],[s.PieceP,["111","011"]],[s.PieceU,["111","101"]],[s.PieceV,["111","001","001"]],[s.PieceY,["1111","0100"]],[s.PieceZ,["100","111","001"]]].map((([t,e])=>function(t){const e=new Array;let s=t;for(let t=0;t<2;t++){for(let t=0;t<4;t++){let t=!1;for(const i of e)if(i.shape.equals(s.shape)){t=!0;break}t||e.push(s),s={kind:(i=s).kind,shape:i.shape.rotated()}}s=r(s)}var i;return e}(((t,e)=>{const s=new Array,[r,o]=[e.length,e[0].length];for(let t=0;t<r;t++){let i=0;for(let s=0;s<o;s++)i|=("1"===e[t][s]?1:0)<<s;s.push(i)}return{kind:t,shape:new i(s,o)}})(t,e))));function a(t,e,s,i,r){if(0!==t.rest){for(;t.has(s,i);)++i>=n&&(s++,i=0);for(let o=0;o<e.length;o++)if(0!=(t.rest>>o&1))for(let n=0;n<e[o].length;n++){const[h,l]=t.put(e[o][n],s,i,!0);h&&(a(t,e,s,i,r),l())}}else r.push(t.field())}self.onmessage=t=>{const s=e(t.data),i=new Array;a(s,c,0,0,i),self.postMessage(i)}})();